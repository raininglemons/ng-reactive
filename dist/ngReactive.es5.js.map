{"version":3,"sources":["ngReactive.es5.js"],"names":[],"mappings":"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","file":"ngReactive.es5.js","sourcesContent":["(function (global, lib) {\n    /**\n     * @see http://ifandelse.com/its-not-hard-making-your-library-support-amd-and-commonjs/\n     */\n    // CommonJS\n    if (global.module !== undefined)\n        global.module.exports = lib(\"react\", \"reactDom\");\n    // AMD\n    else if (global.define !== undefined)\n        global.define(\"ngReactive\", () => lib(\"react\", \"reactDom\"));\n    else\n        global.ngReactive = lib(global.React, global.ReactDOM, global.angular);\n\n}(this, function (React, ReactDOM, angular) {\n    \"use strict\";\n\n    let utils = {};\n\n    /**\n     * Mimic (Function).bind(this). Although does so considerably faster than the\n     * native bind function when arguments aren't required to be bound:\n     *      Chrome - 11x faster\n     *      Firefox - 35x faster\n     *      Safari - 4.5x faster\n     *\n     * @see http://jsperf.com/bind-vs-pseudo-bind\n     * @param fn {Function} function to bind\n     * @param _this {Object} this object for function\n     * @returns {Function} bound function\n     */\n    utils.bind = (fn, _this) => function () {\n        return fn.apply(_this, arguments);\n    };\n\n    //noinspection JSCommentMatchesSignature\n    /**\n     * Runs a function asynchronously, similar to setTimeout(fn, 0), but considerably\n     * faster in the majority of browsers:\n     *      Chrome - 4x faster\n     *      Firefox - 12x faster\n     *      Safari - No change\n     *\n     * @see http://ajaxian.com/archives/settimeout-delay\n     * @param fn {Function} function to run asynchronously\n     */\n    utils.async = (function() {\n        let timeouts = [],\n            messageName = \"async-timeout-message\";\n\n        function handleMessage(event) {\n            if (event.source == window && event.data == messageName) {\n                event.stopPropagation();\n                if (timeouts.length > 0)\n                    timeouts.shift()();\n            }\n        }\n\n        window.addEventListener(\"message\", handleMessage, true);\n\n        return (fn) => {\n            timeouts.push(fn);\n            window.postMessage(messageName, \"*\");\n        };\n    })();\n\n    /**\n     * Creates an immutable object that allows method calls to parent controller\n     * @param $scope\n     * @param $apply\n     * @returns {reactScope}\n     */\n    utils.reactScope = function ($scope, $apply) {\n        // Check if this $scope has its own $apply as well, if so use that instead\n        //\n\n        // Thought? Should be we using ES6 Proxy objects instead? Not sure how they well\n        // they transpile with regard to performance\n        //\n        if ($scope instanceof Array) {\n            // Array should be treated differently as we only want to replace functions\n            // and NOT allow lazy loading of objects\n            //\n            return $scope.some((e) => e instanceof Object) ? $scope.map((val) => {\n                if (val instanceof Function)\n                    return utils.reactFunction(val, $apply, $scope);\n                else if (val instanceof Object)\n                    return utils.reactScope(val, $apply);\n                else\n                    return val;\n            }) : $scope;\n        } else {\n            let keySource = $scope,\n                keys = [],\n                enumerableKeys = Object.keys($scope);\n\n            // Load up all available keys in the object + prototypes\n            //\n            while (keySource !== Object.prototype) {\n                keys = keys.concat(Object.getOwnPropertyNames(keySource));\n                keySource = Object.getPrototypeOf(keySource); //.__proto__;\n            }\n\n            // Proxy all props that are available on original object\n            //\n            /*\n             @see https://jsperf.com/defineproperty-vs-defineproperties-creation\n             Object.defineProperty is actually faster than Object.defineProperties\n             let props = */\n            return keys.reduce((scope, key) => {\n                if ($scope[key] instanceof Function) {\n                    // Wrap function call in a $apply applicable to the ONLY the scope\n                    // the fn exists on and it's children to speed up execution. $apply\n                    // is for suckers\n                    //\n                    Object.defineProperty(scope, key, {\n                        /*scope[key] = {*/\n                        enumerable: key in enumerableKeys,\n                        configurable: false,\n                        get: () => utils.reactFunction($scope[key], $apply, $scope)\n                        /*};*/\n                    });\n                } else if ($scope[key] instanceof Object) {\n                    // For efficiency, lazy load the creation of child objects till\n                    // they're requested. Objects can be deep, and may not always be\n                    // fully required.\n                    //\n                    Object.defineProperty(scope, key, {\n                        enumerable: key in enumerableKeys,\n                        configurable: true,\n                        get: function () {\n                            delete this[key];\n                            return this[key] = utils.reactScope($scope[key], $apply);\n                        }\n                    });\n                } else {\n                    // Not an object, just return an immutable copy\n                    //\n                    Object.defineProperty(scope, key, {\n                        /*scope[key] = {*/\n                        enumerable: key in enumerableKeys,\n                        configurable: false,\n                        writable: false,\n                        value: $scope[key]\n                        /*};*/\n                    });\n                }\n                return scope;\n            }, {});\n            /* @see https://jsperf.com/defineproperty-vs-defineproperties */\n            /* Object.defineProperties(scope, props);\n             return scope; */\n        }\n    };\n\n    utils.reactFunction = ($fn, $apply, $scope) => function () {\n        try {\n            return $fn.apply(this, arguments);\n        } catch (e) {\n            throw e;\n        } finally {\n            // Only $apply if we're not mid-cycle\n            //\n            if ($scope.$root.$$phase !== \"$apply\" && $scope.$root.$$phase !== \"$digest\")\n                $apply();\n        }\n    };\n\n    /**\n     * Converts a react class into an angular directive\n     * @param reactComponent\n     * @param params\n     * @param deepParse Should parse objects and auto-wrap any functions (however deep)?\n     * @returns {*|{}}\n     */\n    utils.reactDirective = function reactDirective (reactComponent, params, deepParse = false) {\n        params = params || {};\n\n        params.restrict = params.restrict || \"E\";\n\n        params.scope = params.scope\n            || Object.keys(reactComponent.propTypes)\n                .reduce((obj, key) => {\n                    obj[key] = \"=\";\n                    return obj;\n                }, {});\n\n        params.link = function (scope, el) {\n            // Get defined variables in scope\n            //\n            let $apply = utils.bind(scope.$apply, scope),\n                vars = Object.keys(scope).filter(v => v.substr(0, 1) !== \"$\"),\n                cachedValues = [],\n                cachedProxies = [],\n                // Wrap a function or use a cached copy if available\n                //\n                mapFn = (i, fn) => {\n                    if (cachedValues[i] === fn)\n                        return cachedProxies[i];\n                    else {\n                        cachedValues[i] = fn;\n                        return cachedProxies[i] = utils.reactFunction(fn, $apply, scope);\n                    }\n                },\n                // Map values from $watchGroup to their keys\n                //\n                mapValues = (newValues) =>\n                    newValues.map((_, i) => _ instanceof Function ? mapFn(i, _) : (deepParse && _ instanceof Object ? utils.reactScope(_, $apply) : _))\n                        .reduce((obj, _, i) => {obj[vars[i]] = _; return obj }, {}) /* */;\n\n\n            // Update component on data change\n            //\n            scope.$watchGroup(vars, (newValues) =>\n                utils.async(() =>\n                    ReactDOM.render(\n                        React.createElement(reactComponent, mapValues(newValues)),\n                        el[0]\n                    )\n                ));\n\n            // Register tear down function\n            //\n            scope.$on('$destroy', () => ReactDOM.unmountComponentAtNode(el[0]));\n        };\n\n        return params;\n    };\n\n    angular.module('ngReactive', [])\n        .factory('ngReactive', () => utils.reactDirective);\n\n    return utils.reactDirective;\n}));"],"sourceRoot":"/source/"}